// Code generated by ent, DO NOT EDIT.

package availableroom

const (
	// Label holds the string label denoting the availableroom type in the database.
	Label = "available_room"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStart holds the string denoting the start field in the database.
	FieldStart = "start"
	// FieldEnd holds the string denoting the end field in the database.
	FieldEnd = "end"
	// EdgeRooms holds the string denoting the rooms edge name in mutations.
	EdgeRooms = "rooms"
	// Table holds the table name of the availableroom in the database.
	Table = "available_rooms"
	// RoomsTable is the table that holds the rooms relation/edge.
	RoomsTable = "available_rooms"
	// RoomsInverseTable is the table name for the Room entity.
	// It exists in this package in order to avoid circular dependency with the "room" package.
	RoomsInverseTable = "rooms"
	// RoomsColumn is the table column denoting the rooms relation/edge.
	RoomsColumn = "room_availability"
)

// Columns holds all SQL columns for availableroom fields.
var Columns = []string{
	FieldID,
	FieldStart,
	FieldEnd,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "available_rooms"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"room_availability",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
