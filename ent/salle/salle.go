// Code generated by ent, DO NOT EDIT.

package salle

const (
	// Label holds the string label denoting the salle type in the database.
	Label = "salle"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNom holds the string denoting the nom field in the database.
	FieldNom = "nom"
	// FieldBatiment holds the string denoting the batiment field in the database.
	FieldBatiment = "batiment"
	// FieldEtage holds the string denoting the etage field in the database.
	FieldEtage = "etage"
	// FieldNumSalle holds the string denoting the num_salle field in the database.
	FieldNumSalle = "num_salle"
	// FieldCapMax holds the string denoting the cap_max field in the database.
	FieldCapMax = "cap_max"
	// EdgeProfilReservation holds the string denoting the profil_reservation edge name in mutations.
	EdgeProfilReservation = "profil_reservation"
	// EdgeDisponibilite holds the string denoting the disponibilite edge name in mutations.
	EdgeDisponibilite = "disponibilite"
	// EdgeReservations holds the string denoting the reservations edge name in mutations.
	EdgeReservations = "reservations"
	// Table holds the table name of the salle in the database.
	Table = "salles"
	// ProfilReservationTable is the table that holds the profil_reservation relation/edge. The primary key declared below.
	ProfilReservationTable = "reservations"
	// ProfilReservationInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfilReservationInverseTable = "profiles"
	// DisponibiliteTable is the table that holds the disponibilite relation/edge.
	DisponibiliteTable = "salle_disponibles"
	// DisponibiliteInverseTable is the table name for the SalleDisponible entity.
	// It exists in this package in order to avoid circular dependency with the "salledisponible" package.
	DisponibiliteInverseTable = "salle_disponibles"
	// DisponibiliteColumn is the table column denoting the disponibilite relation/edge.
	DisponibiliteColumn = "salle_disponibilite"
	// ReservationsTable is the table that holds the reservations relation/edge.
	ReservationsTable = "reservations"
	// ReservationsInverseTable is the table name for the Reservation entity.
	// It exists in this package in order to avoid circular dependency with the "reservation" package.
	ReservationsInverseTable = "reservations"
	// ReservationsColumn is the table column denoting the reservations relation/edge.
	ReservationsColumn = "salle_id"
)

// Columns holds all SQL columns for salle fields.
var Columns = []string{
	FieldID,
	FieldNom,
	FieldBatiment,
	FieldEtage,
	FieldNumSalle,
	FieldCapMax,
}

var (
	// ProfilReservationPrimaryKey and ProfilReservationColumn2 are the table columns denoting the
	// primary key for the profil_reservation relation (M2M).
	ProfilReservationPrimaryKey = []string{"profile_id", "salle_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
