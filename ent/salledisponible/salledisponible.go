// Code generated by ent, DO NOT EDIT.

package salledisponible

const (
	// Label holds the string label denoting the salledisponible type in the database.
	Label = "salle_disponible"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIDSalle holds the string denoting the id_salle field in the database.
	FieldIDSalle = "id_salle"
	// FieldStart holds the string denoting the start field in the database.
	FieldStart = "start"
	// FieldEnd holds the string denoting the end field in the database.
	FieldEnd = "end"
	// EdgeSalle holds the string denoting the salle edge name in mutations.
	EdgeSalle = "salle"
	// Table holds the table name of the salledisponible in the database.
	Table = "salle_disponibles"
	// SalleTable is the table that holds the salle relation/edge.
	SalleTable = "salle_disponibles"
	// SalleInverseTable is the table name for the Salle entity.
	// It exists in this package in order to avoid circular dependency with the "salle" package.
	SalleInverseTable = "salles"
	// SalleColumn is the table column denoting the salle relation/edge.
	SalleColumn = "salle_disponibilite"
)

// Columns holds all SQL columns for salledisponible fields.
var Columns = []string{
	FieldID,
	FieldIDSalle,
	FieldStart,
	FieldEnd,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "salle_disponibles"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"salle_disponibilite",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
