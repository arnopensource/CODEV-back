// Code generated by ent, DO NOT EDIT.

package eventinvite

import (
	"time"
)

const (
	// Label holds the string label denoting the eventinvite type in the database.
	Label = "event_invite"
	// FieldProfileID holds the string denoting the profile_id field in the database.
	FieldProfileID = "profile_id"
	// FieldEventID holds the string denoting the event_id field in the database.
	FieldEventID = "event_id"
	// FieldSince holds the string denoting the since field in the database.
	FieldSince = "since"
	// EdgeProfile holds the string denoting the profile edge name in mutations.
	EdgeProfile = "profile"
	// EdgeEvent holds the string denoting the event edge name in mutations.
	EdgeEvent = "event"
	// ProfileFieldID holds the string denoting the ID field of the Profile.
	ProfileFieldID = "id"
	// EventFieldID holds the string denoting the ID field of the Event.
	EventFieldID = "id"
	// Table holds the table name of the eventinvite in the database.
	Table = "event_invites"
	// ProfileTable is the table that holds the profile relation/edge.
	ProfileTable = "event_invites"
	// ProfileInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfileInverseTable = "profiles"
	// ProfileColumn is the table column denoting the profile relation/edge.
	ProfileColumn = "profile_id"
	// EventTable is the table that holds the event relation/edge.
	EventTable = "event_invites"
	// EventInverseTable is the table name for the Event entity.
	// It exists in this package in order to avoid circular dependency with the "event" package.
	EventInverseTable = "events"
	// EventColumn is the table column denoting the event relation/edge.
	EventColumn = "event_id"
)

// Columns holds all SQL columns for eventinvite fields.
var Columns = []string{
	FieldProfileID,
	FieldEventID,
	FieldSince,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultSince holds the default value on creation for the "since" field.
	DefaultSince func() time.Time
)
